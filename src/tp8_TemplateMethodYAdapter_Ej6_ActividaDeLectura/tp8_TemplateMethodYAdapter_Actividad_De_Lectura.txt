TP8_TemplateMethodYAdapter_Ej1_Actividad_De_Lectura

Ej1..

a.. ¿Dónde se define el esqueleto del algoritmo?

.. El esqueleto de define en la superclase, de esta manera, las subclases podran implementarlos.
	 
b.. ¿Se puede redefinir el esqueleto?

.. Si redefino el esqueleto en la superclase, tendria que tocar todas las subclases que heredan esos mensajes. Ademas, no se debe redefinir el esqueleto en las subclases.
	 
c.. ¿Qué es lo que se puede redefinir?

.. Se puede redefinir los metodos abstractos y los metodos consideros hooks.
	 
d.. ¿Qué es un hook method?

.. Un metodo hook es un metodo que provee un cuerpo por default el cual las subclases van a utilizar desde la super clase. Sin embargo, el mismo puede ser redefinido por las subclases con un @Override.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ej5.. Ayudando al soberano

2..

Clase abstracta: CuentaBancaria
Clase concetra: CuentaCorriente, CajaDeAhorro
Template method: extraer();
operaciones primitivas: puedeExtraer();
operaciones concretas: 	CuentaBancaria.agregarMovimiento();
			SubClase.puedeExtraer();
hook methods: No utilice.
	 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ej6.. Contestar y justificar respuestas.

1.. Existe más de un tipo de adaptadores, mencione y explique cada uno de ellos

.. Identificamos dos tipos de adaptores, el primero en el cual extendemos una clase y recibimos al adaptado por parametro y redefinimos los mensajes que queremos delegar a nuestro adaptado. Y el otro, cuando queremos insertar un objeto que deberia implementar una interfaz pero no lo hace, creamos una nueva clase que la implemente y se guarda el adaptado y nada mas delege la responsabilidad al mismo.

3..¿Se pueden utilizar ambas alternativas de implementación del patrón en java? ¿Justifique la respuesta?

.. Si se puede utilizar ambos ya que java permite la implementacion de interfaces y la herencia con clases.

4.. Ver la interface Enumeration de java y la clase Vector, preste atención a que dicha clase contiene un método "elements()". Explique cómo funciona el patrón adapter y cuáles son los roles de los participantes entre la interface y clase mencionada. Mencione qué tipo de implementación del patrón se utiliza.

.. Por lo que vi en la implementacion de la interface Enumeration y la clase Vector, llegue a la conclusion de que enumeration funciona como un adaptador para el vector donde el mismo vendria a ser el target y la clase Vector vendria a ser el adaptado

5.. Realice el mismo análisis del punto 3, pero con la interface Iterator, la clase ArrayList (preste atención al método "iterator()"). Muestre un ejemplo de funcionamiento y especifique los roles de cada participante.

.. Por lo que logre entender viendo la implementacion de dicha interface y la clase ArrayList, logre comprende que ambas se encuentra adaptadas a travez de una clase ITR. En este caso, la interfaz iterator seria el target, la clase arraylist el adaptee y la clase ITR el adaptador.






